{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var app = {};\n\n\napp.closeStreetCar = '';\napp.goodPizza = '';\napp.userLocation = '';\napp.x = 0;\napp.y= 0;\napp.longNames = [];\n\n$(function(){\n app.init();\n $('#end').val('121 Major Street, Toronto');\n});\n\napp.init = function(){\n\tapp.getGeolocation();\n\n\n\t$('form').on('submit', function(e) {\n\t\te.preventDefault();\n\t\tconsole.log('yolo')\n\t\tapp.start = app.userLocation;\n\t\tapp.end = $('input#end').val();\n\t\tapp.initMap();\n\t\tapp.calculateAndDisplayRoute(app.directionsService, app.directionsDisplay);\n\t\t\n\t\t\n\t})\n};\n\n\n\n/////////////////////////\n/////////TTC API/////////\n/////////////////////////\napp.getGeolocation = function(){\n\n\t//if geolocation is available, store longitude and latitutde co-ordinates to put into TTC Ajax call\n\tif (navigator.geolocation) {\n\t\tnavigator.geolocation.getCurrentPosition(function(position) {\n\n\t\tapp.x = position.coords.latitude;\n\t\tapp.y = position.coords.longitude;\n\t\tapp.userLocation = app.x + ', ' + app.y;\n\n\t\t$.ajax({\n\t\t\turl: 'http://myttc.ca/near/' + app.x + ',' + app.y + '.json',\n\t\t\tmethod: 'GET',\n\t\t\tdataType: 'jsonp',\n\t\t}).then(function(TTCinfo){\n\t\t\t// console.log(TTCinfo.locations);\n\t\t\t// console.log(app.userLocation);\n\t\t\t// console.log(TTCinfo.locations[0].uri);\n\t\t\t// app.TTCinfo = TTCinfo.locations[0].uri;\n\t\t\tapp.getTimeforTTC(TTCinfo.locations[0].uri);\n\t\t// console.log(TTCinfo.locations[0].uri);\n\t\t});\n\t});\n\t//if geolocation isn't available or the user doesn't accept \n\t} else {\n\t\tconsole.log('Nope!')\n\t};\n};\n\n\napp.getTimeforTTC = function(newTTCinfo){\n\tvar TTCVehicleURL = 'http://myttc.ca/vehicles/near/' + newTTCinfo + '.json';\n\tconsole.log(TTCVehicleURL);\n\t$.ajax({\n\t\turl: TTCVehicleURL,\n\t\tmethod: 'GET',\n\t\tdataType: 'jsonp'\n\t}).then(function(vehicleData){\n\t\t\tvar vehicleInfo = [];\n\t\t\tvehicleData.vehicles.forEach(function(val, i) {\n\t\t\tvehicleInfo.push(val);\n\t\t});\n\t\t\t// console.log(vehicleInfo)\n\t\t\tapp.trainData = vehicleInfo;\n\t});\n };\n\napp.getTrain = function() {\n\n\tvar item = $('table.adp-directions tr:nth-child(2) td div')[0]\n\tvar pizza = $(item).find('span:last-child').text();\n\n\tif (pizza.length > 0) {\n\t\tvar splitPizza = pizza.split('- ');\n\t\tapp.goodPizza = splitPizza[1];\n\n\t}\n\tapp.bestTrain();\n\t// for (var i = 0; i < app.longNames.length; i++) { \n\t// \tif (app.longNames[i] == app.goodPizza) {\n\t// \t\tconsole.log(\"this is the streetcar we want \" + app.longNames[i]);\n\t// \t\tapp.closeStreetCar = app.longNames[i];\n\t// \t}\n\t// }\n}\n\napp.bestTrain = function() {\n\tapp.trainData.forEach(function(val, i) {\n\t\tvar preLongName = val.long_name;\n\t\tvar velocity = val.velocity;\n\t\tvar distance = val.distance;\n\t\tvar split = preLongName.split('To');\n\t\tvar finalLongName = split.join('Towards');\n\t\tvar vehicleObject = {\n\t\t\t\tname: finalLongName,\n\t\t\t\tvelo: velocity,\n\t\t\t\tdist: distance\n\t\t};\n\n\t\t// console.log(vehicleObject);\n\n\t\tapp.longNames.push(vehicleObject);\n\n\n\t});\n\tapp.longNames.forEach(function(val, i){\n\n\t\tif(val.name === app.goodPizza){\n\t\t\tapp.userTrain(app.longNames[i]);\n\t\t}\n\n\t});\n}\n\n\n\napp.userTrain = function(theTrain) { \n\tconsole.log(theTrain);\n}\n\n\n\n//////////////////////////\n////////GOOGLE MAPS///////\n//////////////////////////\n\napp.initMap = function() {\n  app.directionsService = new google.maps.DirectionsService;\n  app.directionsDisplay = new google.maps.DirectionsRenderer;\n  var map = new google.maps.Map(document.getElementById('map'), {\n\t\tzoom: 17,\n\t\tcenter: { lat: app.x, lng: app.y}\n  });\n\n\tapp.directionsDisplay.setMap(map);\n\tapp.directionsDisplay.setPanel(document.getElementById('right-panel'));\n\n\tvar control = document.getElementById('floating-panel');\n\t// control.style.display = 'block';\n\tmap.controls[google.maps.ControlPosition.TOP_CENTER].push(control);\n\n\t\n}\n\napp.calculateAndDisplayRoute = function(){\n\tapp.directionsService.route({\n\t\torigin: app.start,\n\t\tdestination: app.end,\n\t\ttravelMode: google.maps.TravelMode.TRANSIT\n\t}, function(response, status) {\n\t\tif (status === google.maps.DirectionsStatus.OK) {\n\t\t  app.directionsDisplay.setDirections(response);\n\t\t  //Call setInterval, store it in a var\n\t\t  // it will return an id that we need to clear\n\t\t  var interval = setInterval(function() {\n\t\t\t//If selector gets something\n\t\t\tif($('.adp-directions').length > 0) {\n\t\t\t\t//Clear the interval\n\t\t\t\tclearInterval(interval)\n\t\t\t\t//get train\n\t\t\t\tapp.getTrain();\n\t\t\t}\n\t\t  },100);\n\t\t  \n\t\t} else {\n\t\t  window.alert('Directions request failed due to ' + status);\n\t\t}\n\t\t\n\t});\n}\n\n\n\n\n////////////////////////\n///////WUNDERGROUND/////\n////////////////////////\n\n\napp.latitude = 43.7000;\napp.longitude = -79.4000;\n\napp.weatherKey = 'e4190875c1187be4';\napp.weatherURL = 'http://api.wunderground.com/api/' + app.weatherKey + '/conditions/q/' + app.latitude + ',' + app.longitude + '.json';\napp.getWeather = function(){\n\t$.ajax ({\n\t\turl: app.weatherURL,\n\t\tmethod: 'GET',\n\t\tdataType: 'json'\n\n\t}).then(function(info){\n\t\t// console.log(info);\n\t});\n}\n\n// Updated upstream\n\napp.getWeather();\n\n// Stashed changes\n\n\n/////////////////////PSUEDO CODE/////////////////////\n\n// Collect user's starting location using geolocation\n\n// Display the current weather conditions\n\n// Change the css of the logo icon to correspond with the weather conditions  \n\n// Collect the user's desired destination\n\n//TTC - using the \"name\" from the first ajax call pass it into a second to get \"vehicles near name\" - take the velocity and distance and figure out how far away the streetcar is\n\n// Display how long it will take to get them from point a - b if they walk and if they take the TTC\n\n// from what the user selects (walking or ttc) store selected travel mode in a variable to be passed through google for the route map (conditional statements)\n\n// WALKING - display a route map with detailed directions getting them from a - b \n\n// TTC - display a route map \n\n// Give the user the option to change their mind and view directions/ route of the other travel mode\n\n "],"sourceRoot":"/source/"}